# -*- coding: utf-8 -*-
"""tut5FirebaseHTMLwidgets.ipynb

Automatically generated by Colab.

"""

!pip install firebase

from firebase import firebase
import time

# Initialize Firebase connection
FBconn = firebase.FirebaseApplication('https://cloudlab5-2fd71-default-rtdb.asia-southeast1.firebasedatabase.app/',None)

def get_all_records():
    """Retrieve all word records"""
    return FBconn.get('/Words/', None)

def get_word(w):
  return FBconn.get('/Words/'+w, None)

def update_word(word, cntr=1):
  try:
      data_to_upload = {
          'cntr': cntr  # Adding timestamp for better tracking
      }
      result = FBconn.put('/Words/', word, data_to_upload)
      if cntr==1:
        print(f"word '{word}' added successfully!")
  except ValueError:
    print("Please enter a valid word")

def inc_word(word):
  try:
    record = get_word(word)
    if not record:
      update_word(word)
    else:
      update_word(word, record["cntr"]+1)
  except e:
    print("Could not inc word cntr")

def delete_record(word):
    """Delete a word record"""
    return FBconn.delete('/Words/', word)

def display_records():
    """Display all word records"""
    records = get_all_records()
    if records:
        print("\nCurrent Records:")
        for record_id, data in records.items():
            print(f"{record_id} => {data['cntr']}")
    else:
        print("\nNo records found")

while True:
    print("\nTemperature Tracker Menu:")
    print("1. Add single word")
    print("2. Add text for analysis")
    print("3. Update word count")
    print("4. Delete word")
    print("5. View all words")
    print("6. Exit")

    choice = input("\nEnter your choice (1-6): ")

    if choice == '1':
        # Add new temperature
        word = input("What is the word? ").lower().split()[0]
        if not word:
          print("Please enter a single word")
          continue
        update_word(word)

    elif choice == '2':
        # Add new text
        # display_records()
        text = input("\nEnter the text: ").lower()
        for w in text.split():
          inc_word(w)

    elif choice == '3':
        # Update word record
        display_records()
        record_id = input("\nEnter the word to update: ").lower()
        result = get_word(record_id)
        if result is None:
            print("The word isn't in DB!")
        else:
          newCntr = int(input("\nEnter the new count: "))
          update_word(record_id, newCntr)

    elif choice == '4':
        # Delete word record
        display_records()
        record_id = input("\nEnter the word to delete: ").lower()
        result = delete_record(record_id)
        if result is None:
            print("Record deleted successfully!")
        else:
            print("Failed to delete record. Check if the ID exists.")

    elif choice == '5':
        # View all records
        display_records()

    elif choice == '6':
        print("Exiting program...")
        break

    else:
        print("Invalid choice. Please try again.")
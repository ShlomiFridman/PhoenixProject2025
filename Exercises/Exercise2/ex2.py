# -*- coding: utf-8 -*-
"""ex2.ipynb

Automatically generated by Colab.

"""

import json
import ipywidgets as widgets

# load the json file with the students data
with open("student.json", "r") as file:
  data = json.load(file)

studentDict = {}
for student in data:
  studentDict[student["name"]] = student
# print(studentDict)


def saveData():
  with open("student.json", "w") as file:
    json.dump(data, file, indent=4)

myLayout = widgets.Layout(
    width='500px',
    padding='3px',
    align_items='center'
)
description_width = "100px"

dropdown = widgets.Dropdown(
    options=["Select a student"] + list(studentDict.keys()),
    description="Student: ",
    style={'description_width': description_width},
    layout=myLayout
)
ftDict  = {}
ftDict["name"] = widgets.Text(
    description="First Name: ",
    value="unknown",
    disabled=True,
    style={'description_width': description_width},
    layout=myLayout
)
ftDict["last name"] = widgets.Text(
    description="Last Name: ",
    value="unknown",
    disabled=True,
    style={'description_width': description_width},
    layout=myLayout
)
ftDict["mail"] = widgets.Text(
    description="Mail: ",
    value="unknown",
    disabled=True,
    style={'description_width': description_width},
    layout=myLayout
)
ftDict["courses"] = widgets.Text(
    description="Courses: ",
    value="unknown",
    disabled=True,
    style={'description_width': description_width},
    layout=myLayout
)
ftDict["link"] = widgets.Text(
    description="Courses: ",
    value="unknown",
    disabled=True,
    style={'description_width': description_width},
    layout=myLayout
)
ftDict["favorite series"] = widgets.Text(
    description="favorite series: ",
    disabled=False,
    style={'description_width': description_width},
    layout=myLayout
)

#output = widgets.Output()

def display_data(changeData):
  #output.clear_output()

  if (changeData.new != "Select a student"):
    newStudent = studentDict[changeData.new]
    #print(newStudent)
    for key,value in newStudent.items():
        #print(f"{key}: {value}")
        ftDict[key].value = str(value)
    #showFT.value = newStudent["favorite series"]
    if "favorite series" not in newStudent.keys():
      ftDict["favorite series"].value = ""

def update_show(change):
  selectedStudent = dropdown.value
  if change.new != "" and selectedStudent in studentDict.keys():
    studentDict[selectedStudent]["favorite series"] = change.new

dropdown.observe(display_data, names="value")
ftDict["favorite series"].observe(update_show, names="value")

saveBtn = widgets.Button(
    description="Save",
    button_style="success"
)

output = widgets.Output()

def saveBtn_clicked(btn):
  with output:
      print("Saving...")
      output.clear_output()
      saveData()
      print("Data saved")

saveBtn.on_click(saveBtn_clicked)

display(widgets.VBox([dropdown] + list(ftDict.values())), saveBtn, output)
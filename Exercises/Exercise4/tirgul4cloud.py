# -*- coding: utf-8 -*-
"""tirgul4Cloud.ipynb

Automatically generated by Colab.
"""

url = 'https://data.gov.il/api/3/action/datastore_search?resource_id=053cea08-09bc-40ec-8f7a-156f0677aff3'

import requests
import pandas as pd
pd.set_option("display.max_columns", None)
response = requests.get(url)
data = response.json()
df = pd.DataFrame(data)


# Create a DataFrame from the 'records' in the JSON response
data_df = pd.DataFrame(data['result']['records'])

import pandas as pd
import ipywidgets as widgets
from IPython.display import display
from plotly.offline import iplot
import plotly.graph_objs as go
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
import plotly.express as px

# tab 1 - statistics
tab1 = widgets.Output()
with tab1:
    print("Data Overview:")
    display(data_df.describe())

# tab 2 - display
tab2 = widgets.Output()
with tab2:
    print("Raw Data:")
    display(data_df)

# tab 3 - graph
tab3 = widgets.Output()
with tab3:
    plt.clf()  # Clear the current figure
    plt.figure(figsize=(10, 8))  # Increased figure size to accommodate labels
    print("Different cars per year:")
    # Sample data
    years = data_df["shnat_yitzur"].unique()
    years.sort()
    yearsCntr = []
    for year in data_df["shnat_yitzur"].unique():
      yearsCntr.append((data_df["shnat_yitzur"] == year).sum())

    sns.barplot({"Years":years, "Amount":yearsCntr}, x="Years", y="Amount")
    plt.xticks(rotation=45)
    plt.show()  # Add this to display the plot
    plt.close()  # Close the figure to free memory

tabs = widgets.Tab(children=[tab1, tab2,tab3])
tabs.set_title(0, 'Tab 1: Data Overview')
tabs.set_title(1, 'Tab 2: Raw Data')
tabs.set_title(2, 'Tab 3: Graph')
display(tabs)